# -*- coding: utf-8 -*-
"""GGLOMERATIVE CLUSTERING MENGGUNAKAN GOOGLE COLLABS (PYTHON)

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1jAQJQlHvRHNJ5QU8zdpo04rgDxT0xwud
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.decomposition import PCA
from sklearn.cluster import AgglomerativeClustering
from sklearn.preprocessing import StandardScaler, normalize
from sklearn.metrics import silhouette_score
import scipy.cluster.hierarchy as shc
from google.colab import files

Data = files.upload()
X= pd.read_excel('DATA UJI.xlsx')
X.info()

# Menghapus kolom CUST_ID dari data yang tidak digunakan untuk clustering
X = X.drop('CUST_ID', axis = 1)

# Mengatasi missing values pada data
X.fillna(method ='ffill', inplace = True)

X.info()

# Menskalakan data sehingga semua fitur menjadi sebanding
scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

# Normalisasi data sehingga data kurang lebih mengikuti distribusi Gaussian
X_normalized = normalize(X_scaled)

# Converting the numpy array into a pandas DataFrame
X_normalized = pd.DataFrame(X_normalized)

pca = PCA(n_components = 2)
X_principal = pca.fit_transform(X_normalized)
X_principal = pd.DataFrame(X_principal)
X_principal.columns = ['P1', 'P2']

X_principal.info()

plt.figure(figsize =(8, 8))
plt.title('Visualising the data')
Dendrogram = shc.dendrogram((shc.linkage(X_principal, method ='ward')))

ac2 = AgglomerativeClustering(n_clusters = 3)

# Visualizing the clustering
plt.figure(figsize =(8, 8))
plt.scatter(X_principal['P1'], X_principal['P2'],
		c = ac2.fit_predict(X_principal), cmap ='rainbow')
plt.show()